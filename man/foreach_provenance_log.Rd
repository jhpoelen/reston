% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/foreach_provenance_log.R
\name{foreach_provenance_log}
\alias{foreach_provenance_log}
\title{Streams provenance log lines into writable connection.}
\usage{
foreach_provenance_log(con, process_func = function(x) {     x },
  version_iter = version_history_iter(), n = -1L,
  line_batch_size = 1)
}
\arguments{
\item{con}{the connection (e.g., file) to write into after being processed by process_func}

\item{process_func}{a function that processes provenance lines}

\item{version_iter}{an provenance version iterator @seealso version_history_iter()}

\item{n}{maximum number of (processed) lines to write, -1 means unlimited}

\item{line_batch_size}{number of lines to be processed at once}
}
\value{
number of written (processed) lines
}
\description{
Streams provenance log lines into writable connection.
}
\examples{
\donttest{
 # open an temporary read/write connection
 con <- fifo("", open = "w+b")
 foreach_provenance_log(con, n = 1)
 first_line_first_provenance_log <- readLines(con)
 close(con)

 # open file
 con <- file("somefile.txt", open = "w+b")
 versions_only = function(lines) {
   lines[grepl("hasVersion", lines)]
 }

 # save only provenance lines with "hasVersion" in it
 foreach_provenance_log(con, process_func = versions_only, n = 1)
 first_version_in_provenance_log <- readLines(con)

 close(con)
}

}
